# -*- coding: utf-8 -*-
# @Author  : yanyao
# @Time    : 2023/5/30 20:58
# @Function:latlong_point_from_tif
#############################################3
from osgeo import gdal,osr
# 指定遥感影像文件路径
image_file = r"D:\pix4d\input.tif"

# 指定经纬度点坐标列表
points = [(118.71301182, 32.20615782),
          (118.71308411, 32.20612377),
          (118.71317885, 32.20616633),
          (118.71278510, 32.20608486),
          (118.71129341, 32.20624229),
          (118.71109586, 32.20619314),
          (118.71071675, 32.20618222),
          (118.70997315, 32.20524839),
          (118.70937802, 32.32482278),
          (118.70928486, 32.2050403),
          (118.70900469, 32.20467556),
          (118.71307060, 32.20598509),
          (118.71255669, 32.20591229),
          (118.71014762, 32.20525168),
          (118.70980976, 32.20519625),
          (118.70967620, 32.20519055),
          (118.70958733, 32.20489939),
          (118.70938936, 32.20474034),
          (118.70928486, 32.20490038),
          (118.70906766, 32.20467556),
          (118.70895901, 32.20456555),
          (118.70954365, 32.20472001),
          (118.71255832, 32.20588878),
          (118.71203799, 32.20635738),
          (118.70986073, 32.20593711),
          (118.70963023, 32.2051963),
          (118.70960098, 32.20469829),
          (118.70938936, 32.20474034),
          (118.70918745, 32.20497737),
          (118.70919828, 32.20490552),
          (118.70923596, 32.20482553),
          (118.70900001, 32.20464946),
          (118.70908554, 32.20455319),
          (118.70936395, 32.20458621),
          ]


# 打开遥感影像文件
dataset = gdal.Open(image_file)

# 获取地理坐标系的转换对象
geotransform = dataset.GetGeoTransform()
srs = osr.SpatialReference()
srs.ImportFromWkt(dataset.GetProjection())

# 创建地理坐标系转换对象
transform = osr.CoordinateTransformation(srs, srs.CloneGeogCS())

# 创建空的结果列表
pixel_values = []

# 循环处理每个经纬度点
for lat, lon in points:
    # 将经纬度点坐标转换为影像坐标
    point = transform.TransformPoint(lon, lat)
    pixel_x = int((point[0] - geotransform[0]) / geotransform[1])
    pixel_y = int((point[1] - geotransform[3]) / geotransform[5])

    # 读取对应像素坐标处的像素值
    band = dataset.GetRasterBand(1)  # 读取第一个波段
    pixel_value = band.ReadAsArray(pixel_x, pixel_y, 1, 1)[0, 0]

    # 将像素值添加到结果列表
    pixel_values.append(pixel_value)

# 关闭遥感影像文件
dataset = None

print("Pixel Values:", pixel_values)
#####################################################################
# import rasterio
# from rasterio.transform import from_latlon
#
# # 指定遥感影像文件路径
# image_file = "your_image_file.tif"
#
# # 指定经纬度点坐标
# latitude = 40.7128  # 纬度
# longitude = -74.0060  # 经度
#
# # 打开遥感影像文件
# with rasterio.open(image_file) as src:
#     # 将经纬度坐标转换为影像坐标
#     row, col = src.index(longitude, latitude)
#
#     # 读取对应坐标处的像素值
#     pixel_value = src.read(1, window=((row, row+1), (col, col+1)))
#
# print("Pixel Value:", pixel_value)
#########################################################################
# from PIL import Image
#
# # 指定遥感影像文件路径
# image_file = r"D:\pix4d\input.tif"

# 指定经纬度点坐标列表
# points = [
#     (40.7128, -74.0060),  # 经纬度点1
#     (41.8781, -87.6298),  # 经纬度点2
#     (37.7749, -122.4194)  # 经纬度点3
# ]
# points = [(118.71301182, 32.20615782),
#           (118.71308411, 32.20612377),
#           (118.71317885, 32.20616633),
#           (118.71278510, 32.20608486),
#           (118.71129341, 32.20624229),
#           (118.71109586, 32.20619314),
#           (118.71071675, 32.20618222),
#           (118.70997315, 32.20524839),
#           (118.70937802, 32.32482278),
#           (118.70928486, 32.2050403),
#           (118.70900469, 32.20467556),
#           (118.71307060, 32.20598509),
#           (118.71255669, 32.20591229),
#           (118.71014762, 32.20525168),
#           (118.70980976, 32.20519625),
#           (118.70967620, 32.20519055),
#           (118.70958733, 32.20489939),
#           (118.70938936, 32.20474034),
#           (118.70928486, 32.20490038),
#           (118.70906766, 32.20467556),
#           (118.70895901, 32.20456555),
#           (118.70954365, 32.20472001),
#           (118.71255832, 32.20588878),
#           (118.71203799, 32.20635738),
#           (118.70986073, 32.20593711),
#           (118.70963023, 32.2051963),
#           (118.70960098, 32.20469829),
#           (118.70938936, 32.20474034),
#           (118.70918745, 32.20497737),
#           (118.70919828, 32.20490552),
#           (118.70923596, 32.20482553),
#           (118.70900001, 32.20464946),
#           (118.70908554, 32.20455319),
#           (118.70936395, 32.20458621),
#           ]
#
# # 打开遥感影像文件
# image = Image.open(image_file)
#
# # 获取影像的地理转换信息
# geotransform = image.info.get('geotransform')
#
# # 创建空的结果列表
# pixel_values = []
#
# # 循环处理每个经纬度点
# for lat, lon in points:
#     # 将经纬度坐标转换为影像坐标
#     x = int((lon - geotransform[0]) / geotransform[1])
#     y = int((lat - geotransform[3]) / geotransform[5])
#
#     # 读取对应坐标处的像素值
#     pixel_value = image.getpixel((x, y))
#
#     # 添加到结果列表中
#     pixel_values.append(pixel_value)
#
# # 关闭遥感影像文件
# image.close()
#
# # 打印提取的像素值
# for i, value in enumerate(pixel_values):
#     print("经纬度点{}的像素值：{}".format(i + 1, value))
